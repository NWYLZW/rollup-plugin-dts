// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixtures > import attributes 1`] = `
[
  "index.d.ts",
]
`;

exports[`fixtures > import attributes 2`] = `
"export { bar as externalCjsSubBar } from 'bar' with { external: 'true' };
export { foo as CJSSub } from 'foo' with { "resolution-mode": 'require' };
export { sub } from 'foo/sub' with { "resolution-mode": 'import' };
"
`;

exports[`fixtures > import resource 1`] = `
[
  "index.d.ts",
]
`;

exports[`fixtures > import resource 2`] = `
"declare const classname: string;

export { classname };
"
`;

exports[`fixtures > import with resolution mode attribute 1`] = `
[
  "index.d.ts",
]
`;

exports[`fixtures > import with resolution mode attribute 2`] = `
"declare const foo = "foo-cts";

export { foo };
"
`;

exports[`fixtures > jsdoc explorer 1`] = `
[
  "index.d.ts",
  "jsdoc.json",
]
`;

exports[`fixtures > jsdoc explorer 2`] = `
"/**
 * This is description for Foo.
 * @example
 * const foo: Foo = {};
 */
interface Foo {
    /**
     * @default 'foo'
     */
    name?: string;
}
/**
 * This is description for Bar.
 * @test-other-tag value
 */
declare const bar = 1;
/** @test-other-tag value */
declare const bor = 1;
/**
 * This is description for bmr.
 * @return {void}
 * This is description for return value.
 * And this is a link to {@link Foo}.
 * And this is a plain link to {@linkplain Foo}.
 * And this is a link with field to {@link Foo#name}.
 * And this is a link with field to {@link Foo.name}.
 * And this is not exist link to {@link NotExist}.
 * And this is an url link to {@link https://example.com}.
 * And this is an url link with text to {@link https://example.com|example}.
 * @param {string} a - This is
 * description for \`a\`.
 */
declare function bmr(a: string): void;
/** @a_for value */
declare const bxr = 1;
declare namespace ns {
    /**
     * This is description for foo.
     * @example
     * console.log(foo);
     */
    const foo = 1;
    namespace a {
        /**
         * This is description for bar.
         * @example
         * console.log(bar);
         */
        const bar = 1;
    }
}
declare namespace ns.a {
    /**
     * This is description for foo.
     * @example
     * console.log(foo);
     */
    const foo = 1;
}
declare namespace ns.a.b.c {
    /**
     * This is description for foo.
     * @example
     * console.log(foo);
     */
    const foo = 1;
}

export { type Foo, bar, bmr, bor, bxr, ns };
"
`;

exports[`fixtures > jsdoc explorer 3`] = `
"{
  "index.d.ts": [
    {
      "comment": "This is description for Foo.",
      "tags": [
        {
          "name": "example",
          "comment": "const foo: Foo = {};"
        }
      ],
      "paths": [
        "Foo"
      ]
    },
    {
      "comment": "This is description for Bar.",
      "tags": [
        {
          "name": "test-other-tag",
          "comment": "value"
        }
      ],
      "paths": [
        "bar"
      ]
    },
    {
      "tags": [
        {
          "name": "test-other-tag",
          "comment": "value"
        }
      ],
      "paths": [
        "bor"
      ]
    },
    {
      "comment": "This is description for bmr.",
      "tags": [
        {
          "name": "return",
          "comment": [
            "\\nThis is description for return value.\\nAnd this is a link to ",
            {
              "type": "like",
              "text": "Foo"
            },
            ".\\nAnd this is a plain link to ",
            {
              "type": "plain",
              "text": "Foo"
            },
            ".\\nAnd this is a link with field to ",
            {
              "type": "like",
              "text": "Foo.name"
            },
            ".\\nAnd this is a link with field to ",
            {
              "type": "like",
              "text": "Foo.name"
            },
            ".\\nAnd this is not exist link to ",
            {
              "type": "like",
              "text": "NotExist"
            },
            ".\\nAnd this is an url link to ",
            {
              "type": "like",
              "text": "https://example.com"
            },
            ".\\nAnd this is an url link with text to ",
            {
              "type": "like",
              "text": "https://example.com|example"
            },
            "."
          ]
        },
        {
          "name": "param",
          "comment": "- This is\\ndescription for \`a\`."
        }
      ],
      "paths": [
        "bmr"
      ]
    },
    {
      "tags": [
        {
          "name": "a_for",
          "comment": "value"
        }
      ],
      "paths": [
        "bxr"
      ]
    },
    {
      "comment": "This is description for foo.",
      "tags": [
        {
          "name": "example",
          "comment": "console.log(foo);"
        }
      ],
      "paths": [
        "ns",
        "foo"
      ]
    },
    {
      "comment": "This is description for bar.",
      "tags": [
        {
          "name": "example",
          "comment": "console.log(bar);"
        }
      ],
      "paths": [
        "ns",
        "a",
        "bar"
      ]
    },
    {
      "comment": "This is description for foo.",
      "tags": [
        {
          "name": "example",
          "comment": "console.log(foo);"
        }
      ],
      "paths": [
        "ns",
        "a",
        "foo"
      ]
    },
    {
      "comment": "This is description for foo.",
      "tags": [
        {
          "name": "example",
          "comment": "console.log(foo);"
        }
      ],
      "paths": [
        "ns",
        "a",
        "b",
        "c",
        "foo"
      ]
    }
  ]
}"
`;

exports[`fixtures > monorepo 1`] = `
[
  "index.d.ts",
]
`;

exports[`fixtures > monorepo 2`] = `
"export * from 'pkg-b';

declare const pkgC = "pkg-c";
type PkgC = typeof pkgC;

declare const testJsSuffixReplace = "test-js-suffix-replace";
type TestSuffixReplace = typeof testJsSuffixReplace;

declare const pkgA = "pkg-a";
type PkgA = typeof pkgA;

export { type PkgA, type PkgC, type TestSuffixReplace, pkgA, pkgC, testJsSuffixReplace };
"
`;

exports[`fixtures > project with references 1`] = `
[
  "index.d.ts",
]
`;

exports[`fixtures > project with references 2`] = `
"interface User {
    name: string;
}

declare const user: User;

export { user };
"
`;

exports[`fixtures > sourcemap > bundled 1`] = `
[
  "bundled.d.ts",
]
`;

exports[`fixtures > sourcemap > bundled 2`] = `
"declare const bundledSub = "bundledSub";
type BundledSub = typeof bundledSub;

declare const bundled = "bundled";
type Bundled = typeof bundled;

export { type Bundled, type BundledSub, bundled, bundledSub };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlZC5kLnRzIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYnVuZGxlZC1zdWIudHMiLCIuLi8uLi9zcmMvYnVuZGxlZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgYnVuZGxlZFN1YiA9IFwiYnVuZGxlZFN1YlwiO1xuZXhwb3J0IHR5cGUgQnVuZGxlZFN1YiA9IHR5cGVvZiBidW5kbGVkU3ViO1xuIiwiZXhwb3J0IGNvbnN0IGJ1bmRsZWQgPSBcImJ1bmRsZWRcIjtcbmV4cG9ydCB0eXBlIEJ1bmRsZWQgPSB0eXBlb2YgYnVuZGxlZDtcbmV4cG9ydCAqIGZyb20gXCIuL2J1bmRsZWQtc3ViXCI7XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQU8sT0FBQSxDQUFBLEtBQUEsQ0FBTSxVQUFVLENBQUEsQ0FBQSxDQUFBLENBQUEsVUFBQSxDQUFBO0FBQ1gsSUFBQSxDQUFBLFVBQVUsVUFBVSxVQUFVOztBQ0RuQyxPQUFBLENBQUEsS0FBQSxDQUFNLE9BQU8sQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBLENBQUE7QUFDUixJQUFBLENBQUEsT0FBTyxVQUFVLE9BQU87OyJ9
"
`;

exports[`fixtures > sourcemap > clazz 1`] = `
[
  "clazz.d.ts",
]
`;

exports[`fixtures > sourcemap > clazz 2`] = `
"declare class Foo {
    bar(): string;
    baz(): string;
}

export { Foo };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhenouZC50cyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsYXp6LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBGb28ge1xuICBiYXIoKSB7XG4gICAgcmV0dXJuIFwiYmFyXCI7XG4gIH1cbiAgYmF6KCkge1xuICAgIHJldHVybiBcImJhelwiO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBQSxDQUFBLEtBQUEsQ0FBYSxHQUFHLENBQUE7QUFDZCxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBO0FBR0EsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQTtBQUdEOzsifQ==
"
`;

exports[`fixtures > sourcemap > default 1`] = `
[
  "index.d.ts",
]
`;

exports[`fixtures > sourcemap > default 2`] = `
"declare function foo(): string;

export { foo as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZC50cyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvbygpIHtcbiAgcmV0dXJuICdmb28nXG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQXdCLE9BQUEsQ0FBQSxRQUFBLENBQUEsR0FBRyxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUE7OyJ9
"
`;

exports[`fixtures > sourcemap > export star as 1`] = `
[
  "index.d.ts",
]
`;

exports[`fixtures > sourcemap > export star as 2`] = `
"interface A {
}

type foo_A = A;
declare namespace foo {
  export type { foo_A as A };
}

export { foo };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZC50cyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2V4cG9ydC1zdGFyLWFzL2Zvby50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIEEge31cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBTSxTQUFBLENBQVcsQ0FBQyxDQUFBO0FBQUc7Ozs7Ozs7In0=
"
`;

exports[`fixtures > sourcemap > named 1`] = `
[
  "named.d.ts",
]
`;

exports[`fixtures > sourcemap > named 2`] = `
"declare function foo(): string;

export { foo };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtZWQuZC50cyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL25hbWVkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBmb28oKSB7XG4gIHJldHVybiAnZm9vJ1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQUEsQ0FBQSxRQUFBLENBQWdCLEdBQUcsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBOzsifQ==
"
`;

exports[`fixtures > sourcemap > overload default export 1`] = `
[
  "overload-default-export.d.ts",
]
`;

exports[`fixtures > sourcemap > overload default export 2`] = `
"declare function foo(a: number): number;
declare function foo(a: bigint): bigint;
declare function foo(): string;

export { foo as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxvYWQtZGVmYXVsdC1leHBvcnQuZC50cyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL292ZXJsb2FkLWRlZmF1bHQtZXhwb3J0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvbyhhOiBudW1iZXIpOiBudW1iZXI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb28oYTogYmlnaW50KTogYmlnaW50O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9vKCk6IHN0cmluZztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvbygpOiBudW1iZXIgfCBiaWdpbnQgfCBzdHJpbmcge1xuICByZXR1cm4gXCJmb29cIjtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiaUJBQXdCLEdBQUcsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUE7aUJBQ0gsR0FBRyxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsTUFBQTtBQUNiLE9BQUEsQ0FBQSxRQUFBLENBQVUsR0FBRyxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUE7OyJ9
"
`;
